openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users:
    get:
      tags:
      - user-rest-controller
      summary: Get user list
      operationId: getNormal
      responses:
        "200":
          description: ok
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
      - user-rest-controller
      summary: Create new user
      operationId: postNormal_1
      parameters:
      - name: login
        in: query
        description: User login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: User password
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
      responses:
        "201":
          description: created
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
  /user/{login}:
    get:
      tags:
      - user-rest-controller
      summary: Get one User by login
      operationId: getNormal_1
      parameters:
      - name: login
        in: path
        description: User login
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
        "406":
          description: Not acceptable
        "400":
          description: Bad request
    put:
      tags:
      - user-rest-controller
      summary: Create or update user
      operationId: putNormal
      parameters:
      - name: login
        in: path
        description: User actual login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: User new password
        required: true
        schema:
          type: string
      responses:
        "201":
          description: created
          content:
            x-www-form-url-encoded:
              schema:
                $ref: '#/components/schemas/User'
        "200":
          description: ok
          content:
            x-www-form-url-encoded:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-rest-controller
      summary: Delete user
      operationId: deleteNormal
      parameters:
      - name: login
        in: path
        description: User login
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        connected:
          type: boolean
